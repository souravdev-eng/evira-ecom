service: evira-backed

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  environment:
    MONGODB_URI: ${ssm:/${self:service}/${self:provider.stage}/MONGODB_URI}

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - secretsmanager:*
          Resource: '*'

        - Effect: 'Allow'
          Action:
            - sns:*
          Resource:
            - '*'
        - Effect: 'Allow'
          Action:
            - logs:*
          Resource: '*'
        - Effect: 'Allow'
          Action:
            - ssm:*
          Resource: '*'
        - Effect: Allow
          Action:
            - execute-api:Invoke
            - execute-api:ManageConnections
          Resource: 'arn:aws:execute-api:*:*:*'

custom:
  getProductsLambdaArn: !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-getProducts
  createProductLambdaArn: !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-createProduct

appSync: ${file(./resources/appSync.yml)}

functions:
  getProducts:
    handler: functions/products/getProducts.handler
    description: ''
  createProduct:
    handler: functions/products/createProduct.handler
    description: ''

plugins:
  - serverless-appsync-plugin
  - serverless-offline
  - serverless-step-functions
  - serverless-iam-roles-per-function
